Index: app/src/main/java/com/usrProject/taizhongoldtownguideapp/component/popupwin/IntroductionCustomPopUpWin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.usrProject.taizhongoldtownguideapp.component.popupwin;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.ImageSwitcher;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.ViewSwitcher;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.bumptech.glide.load.DataSource;\r\nimport com.bumptech.glide.load.engine.GlideException;\r\nimport com.bumptech.glide.request.RequestListener;\r\nimport com.bumptech.glide.request.target.Target;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.usrProject.taizhongoldtownguideapp.GlideApp;\r\nimport com.usrProject.taizhongoldtownguideapp.R;\r\nimport com.usrProject.taizhongoldtownguideapp.model.MapClickDTO;\r\n\r\nimport org.apache.commons.lang3.StringUtils;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\n\r\npublic class IntroductionCustomPopUpWin extends CustomPopUpWin {\r\n    private Context mContext;\r\n    private MapClickDTO mapClickDTO;\r\n    private TextView titleTextView;\r\n    private TextView descTextView;\r\n    private ImageSwitcher imageSwitcher;\r\n    private ProgressBar progressBarImgCount;\r\n\r\n    private StorageReference storageReference;\r\n\r\n    private boolean initFlag = false;\r\n    private ArrayList<String> allImgNames;\r\n    private HashMap<String, byte[]> imgMap;\r\n\r\n    private int currentImg = 0;\r\n//  目前限制傳輸量最多為3MB\r\n    private final long ONE_MEGABYTE = 3 * 1024 * 1024;\r\n    public IntroductionCustomPopUpWin(Context mContext, int xmlLayout, MapClickDTO mapClickDTO) {\r\n        super(mContext, xmlLayout,true);\r\n        this.mContext = mContext;\r\n        this.mapClickDTO = mapClickDTO;\r\n        titleTextView = getView().findViewById(R.id.title_TextView);\r\n        descTextView =  getView().findViewById(R.id.contentTextView);\r\n        imageSwitcher = getView().findViewById(R.id.contentImageSwitcher);\r\n        imageSwitcher.setFactory(() -> {\r\n            ImageView imageView = new ImageView(mContext);\r\n//          這邊可已設定imageView的設定\r\n            return imageView;\r\n        });\r\n        imageSwitcher.setAnimateFirstView(true);\r\n//      設定動畫元件 時間\r\n        Animation outAnimation,inAnimation;\r\n        outAnimation = AnimationUtils.loadAnimation(mContext,R.anim.fade_out);\r\n        outAnimation.setDuration(400);\r\n        inAnimation = AnimationUtils.loadAnimation(mContext,R.anim.fade_in);\r\n        inAnimation.setDuration(400);\r\n        imageSwitcher.setOutAnimation(outAnimation);\r\n        imageSwitcher.setInAnimation(inAnimation);\r\n        progressBarImgCount = getView().findViewById(R.id.progressBar_imgCount);\r\n        storageReference = FirebaseStorage.getInstance(mContext.getString(R.string.storage)).getReference();\r\n        initImageView();\r\n        titleTextView.setText(mapClickDTO.title);\r\n        descTextView.setText(mapClickDTO.desc);\r\n\r\n    }\r\n    private void initImageView(){\r\n        if(StringUtils.isNotBlank(mapClickDTO.imgId)){\r\n            allImgNames = new ArrayList<>();\r\n            imgMap = new HashMap<>();\r\n            Log.d(FirebaseStorage.class.getSimpleName(),storageReference.child(\"MapClick\").child(mapClickDTO.imgId).getPath());\r\n            storageReference.child(\"MapClick\").child(mapClickDTO.imgId).listAll().addOnCompleteListener(task -> {\r\n                if(task.isComplete()){\r\n                    for(StorageReference temp : task.getResult().getItems()){\r\n                        allImgNames.add(temp.getName());\r\n                        imgMap.put(temp.getName(), null);\r\n                    }\r\n                    if(allImgNames.size() > 1){\r\n                        progressBarImgCount.setVisibility(View.VISIBLE);\r\n                        progressBarImgCount.setMax(allImgNames.size());\r\n                        progressBarImgCount.setProgress(currentImg + 1);\r\n                        imageSwitcher.setOnClickListener(view -> showImgResource());\r\n                    }\r\n                    loadImgResource();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private void showImgResource(){\r\n        currentImg = (currentImg + 1) % allImgNames.size();\r\n        Log.d(\"CURRENT\",String.format(\"%d\",currentImg));\r\n        progressBarImgCount.setProgress(currentImg + 1,true);\r\n        imageSwitcher.showNext();\r\n        GlideApp.with(mContext)\r\n                .load(imgMap.get(allImgNames.get(currentImg)))\r\n                .listener(new RequestListener<Drawable>() {\r\n                    @Override\r\n                    public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {\r\n                        return false;\r\n                    }\r\n\r\n                    @Override\r\n                    public boolean onResourceReady(Drawable resource, Object model, Target<Drawable> target, DataSource dataSource, boolean isFirstResource) {\r\n                        imageSwitcher.setImageDrawable(resource);\r\n                        return true;\r\n                    }\r\n                })\r\n                .into((ImageView) imageSwitcher.getCurrentView());\r\n    }\r\n\r\n    private void loadImgResource(){\r\n        if(imgMap.size() == 0){\r\n            return;\r\n        }\r\n        for(String imgName : allImgNames){\r\n            storageReference.child(\"MapClick\").child(mapClickDTO.imgId).child(imgName).getBytes(ONE_MEGABYTE).addOnSuccessListener(bytes -> {\r\n                imgMap.put(imgName, bytes);\r\n                Log.d(FirebaseStorage.class.getSimpleName(),imgName);\r\n                if(!initFlag){\r\n                    currentImg = allImgNames.indexOf(imgName);\r\n                    GlideApp.with(mContext)\r\n                            .load(bytes)\r\n                            .listener(new RequestListener<Drawable>() {\r\n                                @Override\r\n                                public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {\r\n                                    return false;\r\n                                }\r\n\r\n                                @Override\r\n                                public boolean onResourceReady(Drawable resource, Object model, Target<Drawable> target, DataSource dataSource, boolean isFirstResource) {\r\n                                    imageSwitcher.setImageDrawable(resource);\r\n                                    return true;\r\n                                }\r\n                            })\r\n                            .into((ImageView) imageSwitcher.getCurrentView());\r\n                    progressBarImgCount.setProgress(currentImg + 1 ,true);\r\n                    imageSwitcher.setVisibility(View.VISIBLE);\r\n                    initFlag = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/usrProject/taizhongoldtownguideapp/component/popupwin/IntroductionCustomPopUpWin.java b/app/src/main/java/com/usrProject/taizhongoldtownguideapp/component/popupwin/IntroductionCustomPopUpWin.java
--- a/app/src/main/java/com/usrProject/taizhongoldtownguideapp/component/popupwin/IntroductionCustomPopUpWin.java	(revision b80bd3899b00f37f1e0341d08e2c50d1178e4659)
+++ b/app/src/main/java/com/usrProject/taizhongoldtownguideapp/component/popupwin/IntroductionCustomPopUpWin.java	(date 1632320342658)
@@ -100,7 +100,7 @@
 
     private void showImgResource(){
         currentImg = (currentImg + 1) % allImgNames.size();
-        Log.d("CURRENT",String.format("%d",currentImg));
+        Log.d("Method: showImgResource",String.format("%d",currentImg));
         progressBarImgCount.setProgress(currentImg + 1,true);
         imageSwitcher.showNext();
         GlideApp.with(mContext)
